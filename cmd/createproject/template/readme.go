package template

import (
	"bytes"
	"fmt"
	"text/template"

	"github.com/sirupsen/logrus"
	"github.com/spacetronot-research-team/erago/cmd/version"
	"github.com/spacetronot-research-team/erago/common/gomod"
)

func GetReadmeTemplate() (string, error) {
	readmeConfig := NewReadmeConfig()

	readmeTemplate, err := template.New("readmeTemplate").Parse(getReadmeTemplate())
	if err != nil {
		return "", fmt.Errorf("err parse template readmeTemplate: %v", err)
	}

	var templateBuf bytes.Buffer
	if err = readmeTemplate.Execute(&templateBuf, readmeConfig); err != nil {
		return "", fmt.Errorf("err create template: %v", err)
	}
	return templateBuf.String(), nil
}

type ReadmeConfig struct {
	ProjectName string
}

func NewReadmeConfig() ReadmeConfig {
	projectName, err := gomod.GetProjectNameFromModule()
	if err != nil {
		logrus.Warn(fmt.Errorf("err get project name from module: %v", err))
	}

	return ReadmeConfig{
		ProjectName: projectName,
	}
}

func getReadmeTemplate() string {
	var readmeTemplate string

	readmeTemplate += "# {{.ProjectName}}\n"
	readmeTemplate += "Generated by erago@" + version.Current + ".\n"
	readmeTemplate += "\n"
	readmeTemplate += "![erago](https://github.com/spacetronot-research-team/erago/assets/57469556/10dc6e4c-25e7-4b48-bb9e-1e34348b8012)\n"
	readmeTemplate += "\n"
	readmeTemplate += "```\n"
	readmeTemplate += "├── cmd/\n"
	readmeTemplate += "│   ├── main.go             Initial stage of the application will run.\n"
	readmeTemplate += "├── database/\n"
	readmeTemplate += "│   ├── migrate/\n"
	readmeTemplate += "│   │   ├── up.go           Database migrate up, 'go run database/migrate/up.go'.\n"
	readmeTemplate += "│   ├── schema_migration/   Contain database migrate sql file.\n"
	readmeTemplate += "├── docs/\n"
	readmeTemplate += "│   ├── errors.json         Contain all errors list to be deplayed by frontend.\n"
	readmeTemplate += "├── internal/\n"
	readmeTemplate += "│   ├── controller/         Contain things related to gather input (REST/gRPC/console/etc) and pass input as request to service.\n"
	readmeTemplate += "│   │   ├── http/\n"
	readmeTemplate += "│   │   ├── grpc/\n"
	readmeTemplate += "│   ├── repository/         Contain things related to persistence (CRUD database/redis/etc).\n"
	readmeTemplate += "│   │   ├── mockrepository/\n"
	readmeTemplate += "│   ├── router/\n"
	readmeTemplate += "│   │   ├── injection.go    Contain dependency injection from controller to service to repository.\n"
	readmeTemplate += "│   ├── service/            Contain business logic, this package get input request from controller, this package use repository for things related to persistence.\n"
	readmeTemplate += "│   │   ├── mockservice/\n"
	readmeTemplate += "├── go.mod\n"
	readmeTemplate += "└── go.sum\n"
	readmeTemplate += "└── README.md\n"
	readmeTemplate += "```\n"

	return readmeTemplate
}
